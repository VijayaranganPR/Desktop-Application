/*
In Electron, the app.getPath method allows you to retrieve the path of various directories that are commonly used by the operating system. 
The name parameter specifies which directory you want to retrieve the path for.


name string - You can request the following paths by the name:
    home User's home directory.
    appData Per-user application data directory, which by default points to:
%APPDATA% on Windows
$XDG_CONFIG_HOME or ~/.config on Linux
~/Library/Application Support on macOS
    userData The directory for storing your app's configuration files, which by default is the appData directory appended with your app's name. By convention files storing user data should be written to this directory, and it is not recommended to write large files here because some environments may backup this directory to cloud storage.
    sessionData The directory for storing data generated by Session, such as localStorage, cookies, disk cache, downloaded dictionaries, network state, devtools files. By default this points to userData. Chromium may write very large disk cache here, so if your app does not rely on browser storage like localStorage or cookies to save user data, it is recommended to set this directory to other locations to avoid polluting the userData directory.
    temp Temporary directory.
    exe The current executable file.
    module The libchromiumcontent library.
    desktop The current user's Desktop directory.
    documents Directory for a user's "My Documents".
    downloads Directory for a user's downloads.
    music Directory for a user's music.
    pictures Directory for a user's pictures.
    videos Directory for a user's videos.
    recent Directory for the user's recent files (Windows only).
    logs Directory for your app's log folder.
    crashDumps Directory where crash dumps are stored.
Returns string - A path to a special directory or file associated with name. On failure, an Error is thrown.

If app.getPath('logs') is called without called app.setAppLogsPath() being called first, a default log directory will be created equivalent to calling app.setAppLogsPath() without a path parameter.
*/

const { app } = require('electron');

console.log(app.getPath('home'));
// C:\Users\prvij
